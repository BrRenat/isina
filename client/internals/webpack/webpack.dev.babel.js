const path = require('path')
const webpack = require('webpack')
const HtmlWebpackPlugin = require('html-webpack-plugin')

const plugins = [
  new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
  new webpack.NoEmitOnErrorsPlugin(),
  new HtmlWebpackPlugin({
    template: 'src/index.html',
    inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
  }),
  new webpack.optimize.CommonsChunkPlugin({
    name: 'vendor',
    children: true,
    minChunks: 2,
    async: true,
  }),
]

module.exports = require('./webpack.base.babel')({
  // Add hot reloading in development
  entry: [
    'react-hot-loader/patch',
    'eventsource-polyfill', // Necessary for hot reloading with IE
    'webpack-hot-middleware/client?reload=true',
    path.join(process.cwd(), 'src/index.js'), // Start js file
  ],

  // Don't use hashes in dev mode for better performance
  output: {
    publicPath: '/',
    filename: '[name].[hash].js',
    chunkFilename: '[name].[hash].chunk.js',
  },

  babelQuery: {
    presets: [
      'stage-0',
      'react',
      ['env', {
        debug: true,
        modules: false,
        useBuiltIns: true,
        targets: {
          browsers: [
            'last 1 Chrome version',
          ],
        },
      }],
    ],
    // plugins: [
    //   'styled-components',
    //   'syntax-dynamic-import',
    //   'transform-decorators-legacy',
    //   'transform-object-rest-spread',
    //   'transform-class-properties',
    // ],
  },

  // Add development plugins
  plugins, // eslint-disable-line no-use-before-define

  // Emit a source map for easier debugging
  devtool: 'cheap-module-eval-source-map',

  performance: {
    hints: false,
  },
})
